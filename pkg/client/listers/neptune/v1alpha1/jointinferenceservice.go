// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/edgeai-neptune/neptune/pkg/apis/neptune/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// JointInferenceServiceLister helps list JointInferenceServices.
// All objects returned here must be treated as read-only.
type JointInferenceServiceLister interface {
	// List lists all JointInferenceServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JointInferenceService, err error)
	// JointInferenceServices returns an object that can list and get JointInferenceServices.
	JointInferenceServices(namespace string) JointInferenceServiceNamespaceLister
	JointInferenceServiceListerExpansion
}

// jointInferenceServiceLister implements the JointInferenceServiceLister interface.
type jointInferenceServiceLister struct {
	indexer cache.Indexer
}

// NewJointInferenceServiceLister returns a new JointInferenceServiceLister.
func NewJointInferenceServiceLister(indexer cache.Indexer) JointInferenceServiceLister {
	return &jointInferenceServiceLister{indexer: indexer}
}

// List lists all JointInferenceServices in the indexer.
func (s *jointInferenceServiceLister) List(selector labels.Selector) (ret []*v1alpha1.JointInferenceService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JointInferenceService))
	})
	return ret, err
}

// JointInferenceServices returns an object that can list and get JointInferenceServices.
func (s *jointInferenceServiceLister) JointInferenceServices(namespace string) JointInferenceServiceNamespaceLister {
	return jointInferenceServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// JointInferenceServiceNamespaceLister helps list and get JointInferenceServices.
// All objects returned here must be treated as read-only.
type JointInferenceServiceNamespaceLister interface {
	// List lists all JointInferenceServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JointInferenceService, err error)
	// Get retrieves the JointInferenceService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.JointInferenceService, error)
	JointInferenceServiceNamespaceListerExpansion
}

// jointInferenceServiceNamespaceLister implements the JointInferenceServiceNamespaceLister
// interface.
type jointInferenceServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all JointInferenceServices in the indexer for a given namespace.
func (s jointInferenceServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.JointInferenceService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JointInferenceService))
	})
	return ret, err
}

// Get retrieves the JointInferenceService from the indexer for a given namespace and name.
func (s jointInferenceServiceNamespaceLister) Get(name string) (*v1alpha1.JointInferenceService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("jointinferenceservice"), name)
	}
	return obj.(*v1alpha1.JointInferenceService), nil
}
